{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/react_js/course-project/src/pages/ChangeAvatarPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\nimport Drop from \"../utils/DropZoneForAvatar\";\nimport { gql } from \"../utils/GQL\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { useEffect, useState } from \"react\";\nimport { store } from \"../redux/Store\";\nimport { actionAboutMe } from \"../redux/actions/ActionAboutMe\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst actionUploadPhoto = async file => {\n  const uploadFile = async file => {\n    const url = `http://player.node.ed.asmer.org.ua/upload`;\n    let formData = await new FormData();\n    formData.append(\"photo\", file);\n    return fetch(url, {\n      method: \"POST\",\n      headers: localStorage.authToken ? {\n        Authorization: \"Bearer \" + localStorage.authToken\n      } : {},\n      body: formData\n    }).then(res => res.json()).then(data => {\n      return data;\n    });\n  };\n\n  return await Promise.all(file.map(file => uploadFile(file))).then(values => {\n    return values;\n  });\n};\n\nconst actionAddAvatar = async avatar => {\n  const _id = store.getState().promise.aboutMe.payload._id;\n\n  const gqlQuery = `  mutation setAvatar($id: String, $avatar: ID){\n        UserUpsert(user:{_id: $id, avatar:{_id: $avatar}}){\n            _id login nick avatar{url}\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, {\n    id: _id,\n    avatar: avatar\n  });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst UploadBox = _ref => {\n  _s();\n\n  let {\n    defaultPhotos = []\n  } = _ref;\n  const [photos, ChangePhotos] = useState(defaultPhotos);\n  const [photosIds, ChangePhotosIds] = useState(defaultPhotos);\n  useEffect(() => {\n    console.log(photos);\n  }, [photos]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      textAlign: \"left\",\n      padding: \"40px\",\n      marginBottom: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Drop, {\n        imageData: image => {\n          ChangePhotos(prevArray => prevArray.concat(image.map(img => {\n            return {\n              url: `${URL}${img.url}`\n            };\n          })));\n          ChangePhotosIds(prevArray => prevArray.concat(image.map(img => {\n            return {\n              _id: img._id\n            };\n          })));\n        },\n        onUpload: actionUploadPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: Array.isArray(photos) ? photos.map(photo => /*#__PURE__*/_jsxDEV(CardMedia, {\n          varu: true,\n          photo: photo.url\n        }, photo.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          console.log(\"вот тут меняй\", photosIds[0]._id);\n          actionAddAvatar(photosIds[0]._id);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Change Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadBox, \"taq9EoaoH0XjQ3TMOe6ITmhALPQ=\");\n\n_c = UploadBox;\nexport const ChangeAvatarPage = () => {\n  return /*#__PURE__*/_jsxDEV(UploadBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ChangeAvatarPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadBox\");\n$RefreshReg$(_c2, \"ChangeAvatarPage\");","map":{"version":3,"names":["React","LibraryMusicIcon","Drop","gql","Card","Input","Button","TextField","CardMedia","useEffect","useState","store","actionAboutMe","connect","actionUploadPhoto","file","uploadFile","url","formData","FormData","append","fetch","method","headers","localStorage","authToken","Authorization","body","then","res","json","data","Promise","all","map","values","actionAddAvatar","avatar","_id","getState","promise","aboutMe","payload","gqlQuery","gqlPromise","id","action","UploadBox","defaultPhotos","photos","ChangePhotos","photosIds","ChangePhotosIds","console","log","textAlign","padding","marginBottom","image","prevArray","concat","img","URL","display","Array","isArray","photo","ChangeAvatarPage"],"sources":["/Users/administrator/Desktop/react_js/course-project/src/pages/ChangeAvatarPage.js"],"sourcesContent":["import React from \"react\";\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\nimport Drop from \"../utils/DropZoneForAvatar\";\nimport { gql } from \"../utils/GQL\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { useEffect, useState } from \"react\";\n\nimport { store } from \"../redux/Store\";\nimport { actionAboutMe } from \"../redux/actions/ActionAboutMe\";\nimport { connect } from \"react-redux\";\n\nconst actionUploadPhoto = async (file) => {\n  const uploadFile = async (file) => {\n    const url = `http://player.node.ed.asmer.org.ua/upload`;\n    let formData = await new FormData();\n    formData.append(\"photo\", file);\n    return fetch(url, {\n      method: \"POST\",\n      headers: localStorage.authToken\n        ? { Authorization: \"Bearer \" + localStorage.authToken }\n        : {},\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        return data;\n      });\n  };\n  return await Promise.all(file.map((file) => uploadFile(file))).then(\n    (values) => {\n      return values;\n    }\n  );\n};\n\nconst actionAddAvatar = async (avatar) => {\n  const _id = store.getState().promise.aboutMe.payload._id;\n\n\n  const gqlQuery = `  mutation setAvatar($id: String, $avatar: ID){\n        UserUpsert(user:{_id: $id, avatar:{_id: $avatar}}){\n            _id login nick avatar{url}\n        }\n    }`;\n\n  const gqlPromise = gql(gqlQuery, {\n    id: _id,\n    avatar: avatar,\n  });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst UploadBox = ({ defaultPhotos = [] }) => {\n  const [photos, ChangePhotos] = useState(defaultPhotos);\n  const [photosIds, ChangePhotosIds] = useState(defaultPhotos);\n\n  useEffect(() => {\n    console.log(photos);\n  }, [photos]);\n\n  return (\n    <Card sx={{ textAlign: \"left\", padding: \"40px\", marginBottom: \"20px\" }}>\n      <form>\n        <Drop\n          imageData={(image) => {\n            ChangePhotos((prevArray) =>\n              prevArray.concat(\n                image.map((img) => {\n                  return { url: `${URL}${img.url}` };\n                })\n              )\n            );\n            ChangePhotosIds((prevArray) =>\n              prevArray.concat(\n                image.map((img) => {\n                  return { _id: img._id };\n                })\n              )\n            );\n          }}\n          onUpload={actionUploadPhoto}\n        />\n        <div style={{ display: \"flex\" }}>\n          {Array.isArray(photos)\n            ? photos.map((photo) => (\n                <CardMedia varu key={photo.url} photo={photo.url} />\n              ))\n            : \"\"}\n        </div>\n        <Button\n          onClick={() => {\n            console.log(\"вот тут меняй\", photosIds[0]._id);\n            actionAddAvatar(photosIds[0]._id);\n          }}\n        >\n          <h3>Change Avatar</h3>\n        </Button>\n      </form>\n    </Card>\n  );\n};\n\n\nexport const ChangeAvatarPage = () => {\n  return <UploadBox />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
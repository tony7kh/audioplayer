{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/react_js/course-project/src/pages/AddPlaylistPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Drop from \"../utils/DropZoneForTracks\";\nimport { gql } from \"../utils/GQL\";\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst actionUploadTrack = async file => {\n  const uploadFile = async file => {\n    const url = `http://player.node.ed.asmer.org.ua/track`;\n    let formData = await new FormData();\n    formData.append(\"track\", file);\n    return fetch(url, {\n      method: \"POST\",\n      headers: localStorage.authToken ? {\n        Authorization: \"Bearer \" + localStorage.authToken\n      } : {},\n      body: formData\n    }).then(res => res.json()).then(data => {\n      return data;\n    });\n  };\n\n  return await Promise.all(file.map(file => uploadFile(file))).then(values => {\n    return values;\n  });\n};\n\nconst actionNewPlaylist = async (name, description) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String){\n        PlaylistUpsert(playlist:{name: $name, description : $description}){\n            _id, name, description\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, {\n    name,\n    description\n  });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst actionNewPlaylistWithTracks = async (name, description, tracks) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String, $tracks:[TrackInput]){\n        PlaylistUpsert(playlist:{name: $name, description :$description, tracks: $tracks }){\n            _id, name, description tracks{url}\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, {\n    name,\n    description,\n    tracks\n  });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst UploadBox = _ref => {\n  _s();\n\n  let {\n    defaultTracks = []\n  } = _ref;\n  const [tracks, ChangeTracks] = useState(defaultTracks);\n  const [tracksIds, ChangeTracksIds] = useState(defaultTracks);\n  const [name, ChangeName] = useState(\"\");\n  const [description, ChangeDescription] = useState(\"\");\n  useEffect(() => {\n    console.log(tracks);\n  }, [tracks]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      textAlign: \"left\",\n      padding: \"40px\",\n      marginBottom: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        sx: {\n          width: \"100%\",\n          marginBottom: \"10px\"\n        },\n        placeholder: \"Name\",\n        onChange: e => ChangeName(name => name = e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"100%\",\n          margin: \"20px 0\"\n        },\n        id: \"standard-multiline-static\",\n        multiline: true,\n        variant: \"standard\",\n        placeholder: \"Playlist description\",\n        onChange: e => ChangeDescription(description => description = e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drop, {\n        trackData: track => {\n          ChangeTracks(prevArray => prevArray.concat(track.map(img => {\n            return {\n              url: `${URL}${img.url}`\n            };\n          })));\n          ChangeTracksIds(prevArray => prevArray.concat(track.map(img => {\n            return {\n              _id: img._id\n            };\n          })));\n        },\n        onUpload: actionUploadTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: Array.isArray(tracks) ? tracks.map(track => /*#__PURE__*/_jsxDEV(CardMedia, {\n          track: track.url,\n          children: /*#__PURE__*/_jsxDEV(LibraryMusicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)\n        }, track.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          tracks.length = 0 ? actionNewPlaylist(name, description) : actionNewPlaylistWithTracks(name, description, tracksIds);\n        },\n        disabled: name.length < 5,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadBox, \"96DvYZFfpCimDH2bcR18m4NeWvs=\");\n\n_c = UploadBox;\nexport const AddPlaylistPage = () => {\n  return /*#__PURE__*/_jsxDEV(UploadBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n};\n_c2 = AddPlaylistPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadBox\");\n$RefreshReg$(_c2, \"AddPlaylistPage\");","map":{"version":3,"names":["React","useEffect","useState","Drop","gql","LibraryMusicIcon","Card","Input","Button","TextField","CardMedia","actionUploadTrack","file","uploadFile","url","formData","FormData","append","fetch","method","headers","localStorage","authToken","Authorization","body","then","res","json","data","Promise","all","map","values","actionNewPlaylist","name","description","gqlQuery","gqlPromise","action","actionNewPlaylistWithTracks","tracks","UploadBox","defaultTracks","ChangeTracks","tracksIds","ChangeTracksIds","ChangeName","ChangeDescription","console","log","textAlign","padding","marginBottom","width","e","target","value","margin","track","prevArray","concat","img","URL","_id","display","Array","isArray","length","AddPlaylistPage"],"sources":["/Users/administrator/Desktop/react_js/course-project/src/pages/AddPlaylistPage.js"],"sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nimport Drop from \"../utils/DropZoneForTracks\";\nimport { gql } from \"../utils/GQL\";\n\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\n\nconst actionUploadTrack = async (file) => {\n  const uploadFile = async (file) => {\n    const url = `http://player.node.ed.asmer.org.ua/track`;\n    let formData = await new FormData();\n    formData.append(\"track\", file);\n    return fetch(url, {\n      method: \"POST\",\n      headers: localStorage.authToken\n        ? { Authorization: \"Bearer \" + localStorage.authToken }\n        : {},\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        return data;\n      });\n  };\n  return await Promise.all(file.map((file) => uploadFile(file))).then(\n    (values) => {\n      return values;\n    }\n  );\n};\n\nconst actionNewPlaylist = async (name, description) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String){\n        PlaylistUpsert(playlist:{name: $name, description : $description}){\n            _id, name, description\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, { name, description });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst actionNewPlaylistWithTracks = async (name, description, tracks) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String, $tracks:[TrackInput]){\n        PlaylistUpsert(playlist:{name: $name, description :$description, tracks: $tracks }){\n            _id, name, description tracks{url}\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, { name, description, tracks });\n  const action = await gqlPromise;\n  return action;\n};\nconst UploadBox = ({ defaultTracks = [] }) => {\n  const [tracks, ChangeTracks] = useState(defaultTracks);\n  const [tracksIds, ChangeTracksIds] = useState(defaultTracks);\n\n  const [name, ChangeName] = useState(\"\");\n  const [description, ChangeDescription] = useState(\"\");\n\n  useEffect(() => {\n    console.log(tracks);\n  }, [tracks]);\n\n  return (\n    <Card sx={{ textAlign: \"left\", padding: \"40px\", marginBottom: \"20px\" }}>\n      <form>\n        <Input\n          sx={{ width: \"100%\", marginBottom: \"10px\" }}\n          placeholder=\"Name\"\n          onChange={(e) => ChangeName((name) => (name = e.target.value))}\n          value={name}\n        />\n        <TextField\n          sx={{ width: \"100%\", margin: \"20px 0\" }}\n          id=\"standard-multiline-static\"\n          multiline\n          variant=\"standard\"\n          placeholder=\"Playlist description\"\n          onChange={(e) =>\n            ChangeDescription((description) => (description = e.target.value))\n          }\n          value={description}\n        />\n        <Drop\n          trackData={(track) => {\n            ChangeTracks((prevArray) =>\n              prevArray.concat(\n                track.map((img) => {\n                  return { url: `${URL}${img.url}` };\n                })\n              )\n            );\n            ChangeTracksIds((prevArray) =>\n              prevArray.concat(\n                track.map((img) => {\n                  return { _id: img._id };\n                })\n              )\n            );\n          }}\n          onUpload={actionUploadTrack}\n        />\n        <div style={{ display: \"flex\" }}>\n          {Array.isArray(tracks)\n            ? tracks.map((track) => (\n                <CardMedia key={track.url} track={track.url}>\n                  <LibraryMusicIcon />\n                </CardMedia>\n              ))\n            : \"\"}\n        </div>\n        <Button\n          onClick={() => {\n            tracks.length = 0\n              ? actionNewPlaylist(name, description)\n              : actionNewPlaylistWithTracks(name, description, tracksIds);\n          }}\n          disabled={name.length < 5}\n        >\n          <h3>Add playlist</h3>\n        </Button>\n      </form>\n    </Card>\n  );\n};\n\nexport const AddPlaylistPage = () => {\n  return <UploadBox />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
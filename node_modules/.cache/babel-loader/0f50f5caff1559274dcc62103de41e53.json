{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/react_js/course-project/src/pages/AddPlaylistPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Drop from \"../utils/DropZone\";\nimport { gql } from \"../utils/GQL\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst actionUploadTrack = async file => {\n  const uploadFile = async file => {\n    const url = `http://player.node.ed.asmer.org.ua/track`;\n    let formData = await new FormData();\n    formData.append(\"track\", file);\n    return fetch(url, {\n      method: \"POST\",\n      headers: localStorage.authToken ? {\n        Authorization: \"Bearer \" + localStorage.authToken\n      } : {},\n      body: formData\n    }).then(res => res.json()).then(data => {\n      return data;\n    });\n  };\n\n  return await Promise.all(file.map(file => uploadFile(file))).then(values => {\n    return values;\n  });\n};\n\nconst actionNewPlaylist = async (name, description) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String){\n        PlaylistUpsert(playlist:{name: $name, description : $description}){\n            _id, name, description\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, {\n    name,\n    description\n  });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst actionNewPlaylistWithTracks = async (name, description, tracks) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String, $tracks:[TrackInput]){\n        PlaylistUpsert(playlist:{name: $name, description :$description, tracks: $tracks }){\n            _id, name, description tracks{url}\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, {\n    name,\n    description,\n    tracks\n  });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst UploadBlock = _ref => {\n  _s();\n\n  let {\n    defaultTracks = []\n  } = _ref;\n  const [tracks, ChangeTracks] = useState(defaultTracks);\n  const [tracksIds, ChangeTracksIds] = useState(defaultTracks);\n  const [name, ChangeName] = useState(\"\");\n  const [description, ChangeDescription] = useState(\"\");\n  useEffect(() => {\n    console.log(tracks);\n  }, [tracks]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      textAlign: \"left\",\n      padding: \"40px\",\n      marginBottom: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        sx: {\n          width: \"100%\",\n          marginBottom: \"10px\"\n        },\n        placeholder: \"Name\",\n        onChange: e => ChangeName(name => name = e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"100%\",\n          margin: \"20px 0\"\n        },\n        id: \"standard-multiline-static\",\n        multiline: true,\n        variant: \"standard\",\n        placeholder: \"Playlist description\",\n        onChange: e => ChangeDescription(description => description = e.target.value),\n        value: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drop, {\n        trackData: track => {\n          ChangeTracks(prevArray => prevArray.concat(tracks.map(track => {\n            return {\n              url: `${URL}${track.url}`\n            };\n          })));\n          ChangeTracksIds(prevArray => prevArray.concat(tracks.map(track => {\n            return {\n              _id: track._id\n            };\n          })));\n        },\n        onUpload: actionUploadTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: Array.isArray(tracks) ? tracks.map((track, index) => /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"50px\",\n          width: \"50px\",\n          track: track.url,\n          sx: {\n            width: \"10%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this)) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          tracks.length = 0 ? actionNewPlaylist(name, description) : actionNewPlaylistWithTracks(name, description, tracksIds);\n        },\n        disabled: name.length < 5,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadBlock, \"96DvYZFfpCimDH2bcR18m4NeWvs=\");\n\n_c = UploadBlock;\nexport const AddPlaylistPage = () => {\n  return /*#__PURE__*/_jsxDEV(UploadBlock, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 10\n  }, this);\n};\n_c2 = AddPlaylistPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadBlock\");\n$RefreshReg$(_c2, \"AddPlaylistPage\");","map":{"version":3,"names":["React","Drop","gql","Card","Input","Button","TextField","CardMedia","actionUploadTrack","file","uploadFile","url","formData","FormData","append","fetch","method","headers","localStorage","authToken","Authorization","body","then","res","json","data","Promise","all","map","values","actionNewPlaylist","name","description","gqlQuery","gqlPromise","action","actionNewPlaylistWithTracks","tracks","UploadBlock","defaultTracks","ChangeTracks","useState","tracksIds","ChangeTracksIds","ChangeName","ChangeDescription","useEffect","console","log","textAlign","padding","marginBottom","width","e","target","value","margin","track","prevArray","concat","URL","_id","display","Array","isArray","index","length","AddPlaylistPage"],"sources":["/Users/administrator/Desktop/react_js/course-project/src/pages/AddPlaylistPage.js"],"sourcesContent":["import React from \"react\";\n\nimport Drop from \"../utils/DropZone\";\nimport { gql } from \"../utils/GQL\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\n\nconst actionUploadTrack = async (file) => {\n  const uploadFile = async (file) => {\n    const url = `http://player.node.ed.asmer.org.ua/track`;\n    let formData = await new FormData();\n    formData.append(\"track\", file);\n    return fetch(url, {\n      method: \"POST\",\n      headers: localStorage.authToken\n        ? { Authorization: \"Bearer \" + localStorage.authToken }\n        : {},\n      body: formData,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        return data;\n      });\n  };\n  return await Promise.all(file.map((file) => uploadFile(file))).then(\n    (values) => {\n      return values;\n    }\n  );\n};\n\nconst actionNewPlaylist = async (name, description) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String){\n        PlaylistUpsert(playlist:{name: $name, description : $description}){\n            _id, name, description\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, { name, description });\n  const action = await gqlPromise;\n  return action;\n};\n\nconst actionNewPlaylistWithTracks = async (name, description, tracks) => {\n  const gqlQuery = `mutation newPlaylist($name:String, $description:String, $tracks:[TrackInput]){\n        PlaylistUpsert(playlist:{name: $name, description :$description, tracks: $tracks }){\n            _id, name, description tracks{url}\n        }\n    }`;\n  const gqlPromise = gql(gqlQuery, { name, description, tracks });\n  const action = await gqlPromise;\n  return action;\n};\nconst UploadBlock = ({ defaultTracks = [] }) => {\n  const [tracks, ChangeTracks] = useState(defaultTracks);\n  const [tracksIds, ChangeTracksIds] = useState(defaultTracks);\n\n  const [name, ChangeName] = useState(\"\");\n  const [description, ChangeDescription] = useState(\"\");\n\n  useEffect(() => {\n    console.log(tracks);\n  }, [tracks]);\n\n  return (\n    <Card sx={{ textAlign: \"left\", padding: \"40px\", marginBottom: \"20px\" }}>\n      <form>\n        <Input\n          sx={{ width: \"100%\", marginBottom: \"10px\" }}\n          placeholder=\"Name\"\n          onChange={(e) => ChangeName((name) => (name = e.target.value))}\n          value={name}\n        />\n        <TextField\n          sx={{ width: \"100%\", margin: \"20px 0\" }}\n          id=\"standard-multiline-static\"\n          multiline\n          variant=\"standard\"\n          placeholder=\"Playlist description\"\n          onChange={(e) =>\n            ChangeDescription((description) => (description = e.target.value))\n          }\n          value={description}\n        />\n        <Drop\n          trackData={(track) => {\n            ChangeTracks((prevArray) =>\n              prevArray.concat(\n                tracks.map((track) => {\n                  return { url: `${URL}${track.url}` };\n                })\n              )\n            );\n            ChangeTracksIds((prevArray) =>\n              prevArray.concat(\n                tracks.map((track) => {\n                  return { _id: track._id };\n                })\n              )\n            );\n          }}\n          onUpload={actionUploadTrack}\n        />\n        <div style={{ display: \"flex\" }}>\n          {Array.isArray(tracks)\n            ? tracks.map((track, index) => (\n                <CardMedia\n                  component=\"img\"\n                  height=\"50px\"\n                  width=\"50px\"\n                  track={track.url}\n                  sx={{ width: \"10%\" }}\n                />\n              ))\n            : \"\"}\n        </div>\n        <Button\n          onClick={() => {\n            tracks.length = 0\n              ? actionNewPlaylist(name, description)\n              : actionNewPlaylistWithTracks(name, description, tracksIds);\n          }}\n          disabled={name.length < 5}\n        >\n          <h3>Add playlist</h3>\n        </Button>\n      </form>\n    </Card>\n  );\n};\n\nexport const AddPlaylistPage = () => {\n  return <UploadBlock />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
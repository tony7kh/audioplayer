{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/react_js/course-project/src/pages/ChangeAvatarPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\nimport Drop from \"../utils/DropZoneForAvatar\";\nimport { gql } from \"../utils/GQL\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { useEffect, useState } from \"react\";\nimport { actionAboutMe } from \"../redux/actions/ActionAboutMe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst actionUploadPhoto = async file => {};\n\nconst actionAddAvatar = avatar => async (dispatch, getState) => {\n  var _userInfo$avatar;\n\n  console.log(\"userInfo\", getState());\n  let userInfo = getState().promise.aboutMe.payload;\n  if (!avatar) avatar = (_userInfo$avatar = userInfo.avatar) === null || _userInfo$avatar === void 0 ? void 0 : _userInfo$avatar._id;\n  const gqlQuery = `  mutation setAvatar($id: String, $avatar: ID){\n        UserUpsert(user:{_id: $id, avatar:{_id: $avatar}}){\n            _id login avatar{url}\n        }\n    }`;\n  const gqlPromise = await gql(gqlQuery, {\n    id: userInfo._id,\n    avatar: avatar\n  });\n  await gqlPromise;\n  await dispatch(actionAboutMe);\n};\n\nconst UploadBox = _ref => {\n  _s();\n\n  let {\n    defaultTracks = []\n  } = _ref;\n  const [tracks, ChangeTracks] = useState(defaultTracks);\n  const [tracksIds, ChangeTracksIds] = useState(defaultTracks);\n  useEffect(() => {\n    console.log(tracks);\n  }, [tracks]);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      textAlign: \"left\",\n      padding: \"40px\",\n      marginBottom: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Drop, {\n        trackData: track => {\n          ChangeTracks(prevArray => prevArray.concat(track.map(img => {\n            return {\n              url: `${URL}${img.url}`\n            };\n          })));\n          ChangeTracksIds(prevArray => prevArray.concat(track.map(img => {\n            return {\n              _id: img._id\n            };\n          })));\n        },\n        onUpload: actionUploadPhoto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: Array.isArray(tracks) ? tracks.map(track => /*#__PURE__*/_jsxDEV(CardMedia, {\n          track: track.url,\n          children: /*#__PURE__*/_jsxDEV(LibraryMusicIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this)\n        }, track.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          actionAddAvatar(tracksIds);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadBox, \"BuprLmJ+XVABXNtvh/S0zM+ziGc=\");\n\n_c = UploadBox;\nexport const ChangeAvatarPage = () => {\n  return /*#__PURE__*/_jsxDEV(UploadBox, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n_c2 = ChangeAvatarPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UploadBox\");\n$RefreshReg$(_c2, \"ChangeAvatarPage\");","map":{"version":3,"names":["React","LibraryMusicIcon","Drop","gql","Card","Input","Button","TextField","CardMedia","useEffect","useState","actionAboutMe","actionUploadPhoto","file","actionAddAvatar","avatar","dispatch","getState","console","log","userInfo","promise","aboutMe","payload","_id","gqlQuery","gqlPromise","id","UploadBox","defaultTracks","tracks","ChangeTracks","tracksIds","ChangeTracksIds","textAlign","padding","marginBottom","track","prevArray","concat","map","img","url","URL","display","Array","isArray","ChangeAvatarPage"],"sources":["/Users/administrator/Desktop/react_js/course-project/src/pages/ChangeAvatarPage.js"],"sourcesContent":["import React from \"react\";\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\nimport Drop from \"../utils/DropZoneForAvatar\";\nimport { gql } from \"../utils/GQL\";\nimport { Card } from \"@mui/material\";\nimport Input from \"@mui/material/Input\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { useEffect, useState } from \"react\";\n\nimport { actionAboutMe } from \"../redux/actions/ActionAboutMe\";\n\n  const actionUploadPhoto = async (file) => {\n    \n};\n\nconst actionAddAvatar = (avatar) => async (dispatch, getState) => {\n  console.log(\"userInfo\", getState());\n  let userInfo = getState().promise.aboutMe.payload;\n\n  if (!avatar) avatar = userInfo.avatar?._id;\n\n  const gqlQuery = `  mutation setAvatar($id: String, $avatar: ID){\n        UserUpsert(user:{_id: $id, avatar:{_id: $avatar}}){\n            _id login avatar{url}\n        }\n    }`;\n\n  const gqlPromise = await gql(gqlQuery, {\n    id: userInfo._id,\n    avatar: avatar,\n  });\n  await gqlPromise;\n\n  await dispatch(actionAboutMe);\n};\n\nconst UploadBox = ({ defaultTracks = [] }) => {\n  const [tracks, ChangeTracks] = useState(defaultTracks);\n  const [tracksIds, ChangeTracksIds] = useState(defaultTracks);\n\n  useEffect(() => {\n    console.log(tracks);\n  }, [tracks]);\n\n  return (\n    <Card sx={{ textAlign: \"left\", padding: \"40px\", marginBottom: \"20px\" }}>\n      <form>\n        <Drop\n          trackData={(track) => {\n            ChangeTracks((prevArray) =>\n              prevArray.concat(\n                track.map((img) => {\n                  return { url: `${URL}${img.url}` };\n                })\n              )\n            );\n            ChangeTracksIds((prevArray) =>\n              prevArray.concat(\n                track.map((img) => {\n                  return { _id: img._id };\n                })\n              )\n            );\n          }}\n          onUpload={actionUploadPhoto}\n        />\n        <div style={{ display: \"flex\" }}>\n          {Array.isArray(tracks)\n            ? tracks.map((track) => (\n                <CardMedia key={track.url} track={track.url}>\n                  <LibraryMusicIcon />\n                </CardMedia>\n              ))\n            : \"\"}\n        </div>\n        <Button\n          onClick={() => {\n            actionAddAvatar(tracksIds);\n          }}\n        >\n          <h3>Add playlist</h3>\n        </Button>\n      </form>\n    </Card>\n  );\n};\n\nexport const ChangeAvatarPage = () => {\n  return <UploadBox />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
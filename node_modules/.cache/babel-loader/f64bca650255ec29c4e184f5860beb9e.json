{"ast":null,"code":"var _jsxFileName = \"/Users/administrator/Desktop/react_js/course-project/src/components/ListOfPlaylists.js\";\nimport \"../style/ListOfPlaylists.css\";\nimport React from \"react\";\nimport { store } from \"../redux/Store\";\nimport { connect } from \"react-redux\";\nimport { Box } from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\nimport { CardActionArea } from \"@mui/material\";\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\nimport { actionSetPlaylist } from \"../redux/actions/playerActions/playerActions\";\nimport { actionAllPlaylists } from \"../redux/actions/ActionAllPlaylists\";\nimport { Triangle } from \"react-loader-spinner\";\nimport { ADD_PLAYLIST_PAGE_PATH } from \"../Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nstore.dispatch(actionAllPlaylists(\"[{}]\"));\n\nconst ActionAreaCard = _ref => {\n  let {\n    playlist = {}\n  } = _ref;\n  const {\n    name,\n    description\n  } = playlist;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"Playlist-item\",\n    onClick: () => {\n      store.dispatch(actionSetPlaylist(playlist));\n    },\n    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: \"Playlist-cover\",\n        component: \"img\",\n        image: \"https://www.colorhexa.com/1a76d2.png\",\n        alt: \"playlist-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: name || \"no name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ActionAreaCard;\n\nconst ListOfPlaylists = _ref2 => {\n  let {\n    playlists = [],\n    status\n  } = _ref2;\n  return status === \"PENDING\" || !status ? /*#__PURE__*/_jsxDEV(Triangle, {\n    color: \"#1A76D2\",\n    height: \"100\",\n    width: \"1 00\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: ADD_PLAYLIST_PAGE_PATH,\n      children: [/*#__PURE__*/_jsxDEV(PlaylistAddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), \"Typi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"Playlists\",\n      children: playlists.map(playlist => /*#__PURE__*/_jsxDEV(ActionAreaCard, {\n        playlist: playlist\n      }, playlist._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ListOfPlaylists;\nexport const CListOfPlaylists = connect(state => {\n  var _state$promise$allPla;\n\n  return {\n    playlists: state.promise.allPlaylists.payload,\n    status: (_state$promise$allPla = state.promise.allPlaylists) === null || _state$promise$allPla === void 0 ? void 0 : _state$promise$allPla.status\n  };\n})(ListOfPlaylists);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ActionAreaCard\");\n$RefreshReg$(_c2, \"ListOfPlaylists\");","map":{"version":3,"names":["React","store","connect","Box","Card","CardContent","CardMedia","Typography","Link","CardActionArea","PlaylistAddIcon","actionSetPlaylist","actionAllPlaylists","Triangle","ADD_PLAYLIST_PAGE_PATH","dispatch","ActionAreaCard","playlist","name","description","ListOfPlaylists","playlists","status","map","_id","CListOfPlaylists","state","promise","allPlaylists","payload"],"sources":["/Users/administrator/Desktop/react_js/course-project/src/components/ListOfPlaylists.js"],"sourcesContent":["import \"../style/ListOfPlaylists.css\";\nimport React from \"react\";\nimport { store } from \"../redux/Store\";\nimport { connect } from \"react-redux\";\n\nimport { Box } from \"@mui/material\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { Link } from \"react-router-dom\";\nimport { CardActionArea } from \"@mui/material\";\nimport PlaylistAddIcon from \"@mui/icons-material/PlaylistAdd\";\n\nimport { actionSetPlaylist } from \"../redux/actions/playerActions/playerActions\";\n\nimport { actionAllPlaylists } from \"../redux/actions/ActionAllPlaylists\";\n\nimport { Triangle } from \"react-loader-spinner\";\nimport { ADD_PLAYLIST_PAGE_PATH } from \"../Constants\";\n\nstore.dispatch(actionAllPlaylists(\"[{}]\"));\n\nconst ActionAreaCard = ({ playlist = {} }) => {\n  const { name, description } = playlist;\n\n  return (\n    <Card\n      className=\"Playlist-item\"\n      onClick={() => {\n        store.dispatch(actionSetPlaylist(playlist));\n      }}\n    >\n      <CardActionArea>\n        <CardMedia\n          className=\"Playlist-cover\"\n          component=\"img\"\n          image=\"https://www.colorhexa.com/1a76d2.png\"\n          alt=\"playlist-cover\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            {name || \"no name\"}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nconst ListOfPlaylists = ({ playlists = [], status }) =>\n  status === \"PENDING\" || !status ? (\n    <Triangle color=\"#1A76D2\" height=\"100\" width=\"1 00\" />\n  ) : (\n    <Box>\n      <Link to={ADD_PLAYLIST_PAGE_PATH}>\n        <PlaylistAddIcon/>\n        Typi\n      </Link>\n      <Box className=\"Playlists\">\n        {playlists.map((playlist) => (\n          <ActionAreaCard playlist={playlist} key={playlist._id} />\n        ))}\n      </Box>\n    </Box>\n  );\nexport const CListOfPlaylists = connect((state) => ({\n  playlists: state.promise.allPlaylists.payload,\n  status: state.promise.allPlaylists?.status,\n}))(ListOfPlaylists);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}